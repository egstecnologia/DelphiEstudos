unit UDesafio.Validador.NotNull;

interface

uses
  UDesafio.Validador.Interfaces;
  type
    TValidationRulesNotNull = class (TInterfacedObject, iValidationRules)
      private
      [weak]
      FParent : iValidation;
      FParams : iValidationRulesParams;
      procedure NotNullOnExit (Sender : TObject);
      procedure NotNullOnChange (Sender : TObject);
      public
        constructor Create (Parent : iValidation);
        destructor Destroy; override;
        class function New (Parent : iValidation) : iValidationRules;
        function Params : iValidationRulesParams;
        //Injeção de Dependencia
        function &End : iValidation;
      end;

implementation

uses
  UDesafio.Validador.Parametros, Vcl.StdCtrls, System.SysUtils;



{ TValidationRulesNotNull }

function TValidationRulesNotNull.&End: iValidation;
begin
  Result := FParent;

  if FParams.Component is TEdit then
  begin
    TEdit(FParams.Component).OnExit := NotNullOnExit;
    TEdit(FParams.Component).OnChange := NotNullOnChange;
  end;
end;

constructor TValidationRulesNotNull.Create(Parent : iValidation);
begin
 FParent := Parent;
end;

destructor TValidationRulesNotNull.Destroy;
begin

  inherited;
end;

class function TValidationRulesNotNull.New (Parent : iValidation) : iValidationRules;
begin
  Result := Self.Create(Parent);
end;

procedure TValidationRulesNotNull.NotNullOnChange(Sender: TObject);
begin
  if Trim(TEdit(Sender).Text) <> '' then
  begin
    TLabel(FParams.DisplayLabel).Visible := False;
    TEdit(Sender).Color := FParams.ColorDefault;
  end;
end;

procedure TValidationRulesNotNull.NotNullOnExit(Sender: TObject);
begin
  if Trim (TEdit(Sender).Text) = '' then
  begin
    TEdit(Sender).Color := FParams.ColorDanger;
    TEdit(Sender).SetFocus;
    TLabel(FParams.DisplayLabel).Visible := True;
    if Trim (FParams.DisplayMsg) = '' then
    TLabel(FParams.DisplayLabel).Caption := TEdit(Sender).Name + ' Não pode ser vazio'
    else
    TLabel(FParams.DisplayLabel).Caption := FParams.DisplayMsg;

  end;

end;

function TValidationRulesNotNull.Params: iValidationRulesParams;
begin
  if not Assigned(FParams) then
      FParams := TValidationRulesParams.New(Self);
    Result := FParams;
end;

end.
